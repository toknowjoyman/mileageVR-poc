
<head>
  <%= javascript_include_tag 'application' %>
  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
  integrity="sha256-pasqAKBDmFT4eHoN2ndd6lN370kFiGUFyTiUHWhU7k8="
  crossorigin="anonymous"></script>
  <script type="text/javascript" charset="utf-8">
  // alert(gon.microposts[0].content)
  </script>
</head>

<body>
  <% if logged_in? %>

  <!-- GAME DISPLAY  -->
  <!-- <div id="gameDisplay" > style="overflow: hidden"-->

  <canvas id="scrollableGame" height="window.innerheight" width="window.innerWidth"></canvas> <!-- width="3840px" -->

  <!-- </div> -->
  <!--
  <h1>VegRising POC</h1>
-->
<!-- <%= link_to "new!", new_meal_path, class:"btn btn-success"%> -->


<!-- DASHBOARD -->

<p>Succesful Meals Ratio</p>
<p>Carbon Emissions Saved:</p>
<p>Community Impact:</p>



<!-- <a href="#" class="btn btn-lg btn-primary">Sign up now!</a> -->


<!-- Features -->

<p></p>
<!-- <input type="search" class="form-control" placeholder="Find Restaurants"> -->
<%= form_for(@micropost) do |f| %>
<div class="field">
  <%= f.text_field :content, placeholder: "Plant-based item..." %>
</div>
<p>
  <%= f.submit "Track Meal", class: "btn btn-success", style: "border-radius:0px", align: "right" %>
</p>
<% end %>
<p></p>


<!-- <div class="btn-group">



<form method="post" action="QrCode">

<button id ="Scan QR Code"class="btn btn-dark" style="border-radius:0px; -webkit-border-radius:0px; -moz-border-radius:0px" align="left" name="addEntry" value="Submit" />
Scan QR </button>

</form>


</div> -->
<p>
  <%= link_to 'List your Plant-Based Meals', microposts_path %>
</p>


<script>

(function() {
  var display = document.getElementById('gameDisplay');
  var canvas = document.getElementById('scrollableGame'),
  context = canvas.getContext('2d');
  var dragging = false;
  var lastX;
  var marginLeft = 0;


  // canvas.addEventListener('mousedown', function(e) {
  //   var evt = e || event;
  //   dragging = true;
  //   lastX = evt.clientX;
  //   e.preventDefault();
  // }, false);
  //
  // window.addEventListener('mousemove', function(e) {
  //   var evt = e || event;
  //   if (dragging) {
  //     var delta = evt.clientX - lastX;
  //     lastX = evt.clientX;
  //     marginLeft += delta;
  //     canvas.style.marginLeft = marginLeft + "px";
  //   }
  //   e.preventDefault();
  // }, false);
  //
  // window.addEventListener('mouseup', function() {
  //   dragging = false;
  // }, false);



  // resize the canvas to fill browser window dynamically
  window.addEventListener('resize', resizeCanvas, false);

  function resizeCanvas() {
    // display.width = window.innerWidth;
    // display.height = window.innerHeight/3;

    canvas.width = window.innerWidth;//remove to enable sidescroll
    canvas.height = window.innerHeight/3;

    drawScene();
  }
  resizeCanvas();

  var verPix = canvas.height/48;
  var horPix = canvas.width/64;


  function drawGround(){

    // # ground beneath topsoil
    context.beginPath();
    context.rect(0, canvas.height - (2*canvas.height/48) , canvas.width, canvas.height/24);
    context.fillStyle = "gold";
    context.fill();
  }

  function drawSoil() {
    // # topsoil
    context.beginPath();
    context.rect(0, canvas.height - (4*canvas.height/48), canvas.width, canvas.height/24);
    context.fillStyle = "gold";
    context.fill();
  }

  function drawGrassSingle(xPos) {
    // # single blade of grass
    context.beginPath();
    context.rect(xPos, canvas.height - (5*canvas.height/48), 5, 15);
    context.fillStyle = "green";
    context.fill();
  }
  function drawGrassDouble(xPos) {
    // # double blade of grass
    context.beginPath();
    context.rect(xPos, canvas.height - (6*canvas.height/48), 5, 20);
    context.fillStyle = "green";
    context.fill();

    context.rect(xPos+5, canvas.height - (5*canvas.height/48), 5, 15);
    context.fillStyle = "green";
    context.fill();
  }
  function drawSapling(xPos) {
    // sapling
    context.beginPath();
    context.rect(xPos, canvas.height - (8*canvas.height/48), 5, 30);//stem
    context.fillStyle = "green";
    context.fill();
    context.rect(xPos-8, 205, 20, 2);//leaf
    context.fillStyle = "green";
    context.fill();
  }

  function drawPlant(xPos) {
    // sapling
    context.beginPath();
    context.rect(xPos, canvas.height - (10*canvas.height/48), 5, 50);//stem
    context.fillStyle = "brown";
    context.fill();
    context.beginPath();
    context.rect(xPos-13, canvas.height - (10*canvas.height/48), (6*canvas.height/48), 3);//first leaves
    context.fillStyle = "green";
    context.fill();
    context.rect(xPos-18, canvas.height - (6*canvas.height/48),  (8*canvas.height/48), 5);//second leaves
    context.fillStyle = "green";
    context.fill();
  }

  function drawTree(xPos) {
    //stem
    context.beginPath();
    context.rect(xPos, canvas.height/2, 10, canvas.height/2);
    context.fillStyle = "brown";
    context.fill();

    //first leaves
    context.beginPath();
    context.rect(xPos-13, canvas.height/2 + 4 * canvas.height/48, 40, canvas.height/48);
    context.fillStyle = "green";
    context.fill();

    //second leaves
    context.rect(xPos-18, canvas.height/2 + canvas.height/30, 50, canvas.height/30);
    context.fillStyle = "green";
    context.fill();

    //top branch
    context.beginPath();
    context.rect(xPos-13, canvas.height/2, 40, canvas.height/48);
    context.fillStyle = "green";
    context.fill();
  }

  function drawCanopy() {
    // sapling
    context.rect(40, 200, 5, 30);
    context.fillStyle = "green";
    context.fill();

    context.rect(32, 205, 20, 2);
    context.fillStyle = "green";
    context.fill();
  }

  function drawPlantBasedOnAge(mealMonth, mealDate, xPos){
    var today = new Date();
    var todaysMonth = (today.getUTCMonth()+1).toString(),
    todaysDate = today.getUTCDate().toString();
    var monthsSince = todaysMonth - mealMonth,
    daysSince = todaysDate - mealDate,
    AbsoluteDaysSinceMeal = monthsSince * 28 + daysSince; //AbsoluteDaysSinceMeal is configured to 28 days instead of 30/31, to test/play.

    // alert(AbsoluteDaysSinceMeal);
    switch (AbsoluteDaysSinceMeal){
      case 0:
      case 1:
      // return
      drawGrassSingle(xPos);
      break;
      case 2:
      // return
      drawGrassDouble(xPos);
      break;
      case 3:
      // return
      drawSapling(xPos);
      break;
      case 4:
      // return
      drawSapling(xPos);
      break;

      case 5:
      // return
      drawPlant(xPos);
      break;
      case 6:
      // return
      drawPlant(xPos);
      break;
      case 7:
      // return
      drawPlant(xPos);
      break;

      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      // return
      drawTree(xPos);
      break;
      case 13:
      // return
      drawTree(xPos);
      break;

      default:
      drawTree(xPos);
    }
  }

  function is_fibonacci(n){
    var phi = 0.5 + 0.5 * Math.sqrt(5.0)
    var a = phi * n
    return Math.abs(Math.round(a) - a) < 1.0 / n
  }
  // alert(is_fibonacci(13));

  function plantingOnFibonacciMeals(){
    var xPos = canvas.width/10;// x location of plant is updated on count
    var previousFibonacci = 1;//
    for (const [i, meal] of gon.microposts.entries()) {
      var mealsCount = i+1;

      var mm = meal.created_at[5]+meal.created_at[6], dd = meal.created_at[8]+meal.created_at[9]; // getting string representation of gon var for date/time of meal

      if (is_fibonacci(mealsCount)){
        drawPlantBasedOnAge(mm, dd, xPos)
        xPos=xPos+canvas.width/10;
      }

      // switch (mealsCount){
      //   // if the meal is fibonacci count
      //   // draw a plant
      //
      //   case 1:
      //   drawPlantBasedOnAge(mm, dd,xPos);
      //   xPos=xPos+canvas.width/10;
      //   break;
      //
      //
      //   case 2:
      //
      //   drawPlantBasedOnAge(mm, dd,xPos);
      //   xPos=xPos+canvas.width/10;
      //   break;
      //
      //   case 3:
      //   drawPlantBasedOnAge(mm, dd,xPos);
      //   xPos=xPos+canvas.width/10;
      //   break;
      //   case 4:break;
      //   case 5:
      //   drawPlantBasedOnAge(mm, dd, xPos);
      //   xPos=xPos+canvas.width/10;
      //   break;
      //
      //   case 6:break;
      //   case 7:break;
      //   case 8:
      //   drawPlantBasedOnAge(mm, dd, xPos);
      //   xPos=xPos+canvas.width/10;
      //   break;
      //   case 9:break;
      //   case 10:break;
      //   case 11:break;
      //   case 12:break;
      //   case 13:
      //   drawPlantBasedOnAge(mm, dd, xPos);
      //   xPos=xPos+canvas.width/10;
      //   break;
      //
      // }
    }
  }






  function drawScene() {

    drawSoil();
    drawGround();

    plantingOnFibonacciMeals();

  }

  //params to add: days, meals


})();

// var c = document.getElementById("myCanvas");
// var context = c.getContext("2d");
// drawScene();
// function drawScene(){
//
//   drawSoil();
//   drawGround();
//
//   switch (gon.count){
//     case 1: drawGrassSingle(20);
//     break;
//     case 2: drawGrassDouble(40);
//     break;
//     case 3: drawSapling(60);
//     break;
//     case 4: drawPlant(80);
//     break;
//     case 5: drawTree(100);
//     break;
//     case 6: drawGrassSingle(20);
//     drawGrassDouble(50);
//     drawSapling(80);
//     drawPlant(120);
//     drawTree(160);
//     break;
//     case 7: drawGrassDouble(20);
//     drawGrassDouble(50);
//     drawSapling(80);
//     drawPlant(120);
//     drawTree(160);
//     break;
//     case 8: drawGrassDouble(20);
//     drawSapling(50);
//     drawPlant(80);
//     drawTree(120);
//     drawTree(160);
//     case 9: drawSapling(20);
//     break;
//   }
// }
//
// //params to add: days, meals
// function drawSoil() {
//   // # topsoil
//   context.beginPath();
//   context.rect(0, 220, 320, 10);
//   context.fillStyle = "gold";
//   context.fill();
// }
//
// function drawGround(){
//   // # ground beneath topsoil
//   context.beginPath();
//   context.rect(0, 230, 320, 10);
//   context.fillStyle = "gold";
//   context.fill();
// }
// function drawGrassSingle(xPos) {
//   // # single blade of grass
//   context.beginPath();
//   context.rect(xPos, 215, 5, 15);
//   context.fillStyle = "green";
//   context.fill();
// }
// function drawGrassDouble(xPos) {
//   // # double blade of grass
//   context.beginPath();
//   context.rect(xPos, 210, 5, 20);
//   context.fillStyle = "green";
//   context.fill();
//
//   context.rect(xPos+5, 215, 5, 15);
//   context.fillStyle = "green";
//   context.fill();
// }
// function drawSapling(xPos) {
//   // sapling
//   context.beginPath();
//   context.rect(xPos, 200, 5, 30);//stem
//   context.fillStyle = "green";
//   context.fill();
//   context.rect(xPos-8, 205, 20, 2);//leaf
//   context.fillStyle = "green";
//   context.fill();
// }
//
// function drawPlant(xPos) {
//   // sapling
//   context.beginPath();
//   context.rect(xPos, 180, 5, 50);//stem
//   context.fillStyle = "brown";
//   context.fill();
//   context.beginPath();
//   context.rect(xPos-13, 205, 30, 3);//first leaves
//   context.fillStyle = "green";
//   context.fill();
//   context.rect(xPos-18, 183, 40, 5);//second leaves
//   context.fillStyle = "green";
//   context.fill();
// }
//
// function drawTree(xPos) {
//   // sapling
//   context.beginPath();
//   context.rect(xPos, 130, 10, 100);//stem
//   context.fillStyle = "brown";
//   context.fill();
//   context.beginPath();
//   context.rect(xPos-13, 150, 40, 5);//first leaves
//   context.fillStyle = "green";
//   context.fill();
//   context.rect(xPos-18, 140, 50, 7);//second leaves
//   context.fillStyle = "green";
//   context.fill();
//   context.beginPath();
//   context.rect(xPos-13, 130, 40, 5);//top branch
//   context.fillStyle = "green";
//   context.fill();
// }
//
// function drawCanopy() {
//   // sapling
//   context.rect(40, 200, 5, 30);
//   context.fillStyle = "green";
//   context.fill();
//
//   context.rect(32, 205, 20, 2);
//   context.fillStyle = "green";
//   context.fill();
// }
// </script>
<!-- <%= link_to "Log out", logout_path, method: :delete %> -->
<% else %>
<%= link_to "Sign up now!", signup_path, class: "btn btn-lg btn-primary" %>
<%= link_to "Login", login_path, class: "btn btn-lg btn-success" %>
<% end %>


<%= form_tag("/search", method: "get") do %>

<%= text_field_tag(:query, "Restaurants by ZIP") %>

<%= submit_tag("Search") %>
<% end %>




</body>
</html>
